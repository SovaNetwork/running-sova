# This docker-compose file is used to run a Sova OP testnet sequencer.
#
# There are two profiles in this file: `core` and `op-stack`.
# The `core` profile is used to run the core Sova components,
# while the `op-stack` profile is used to run the OP stack components.
# Use them together to run the entire Sova OP testnet sequencer.

#! In a production environment, this should not be used. It is intended to be used
#! for testing and development purposes only.
services:
  # Core Sova components
  # Reth docs for OP chains: https://reth.rs/run/optimism.html?highlight=sequencer#running-op-reth
  sova-reth:
    image: ghcr.io/sovanetwork/sova-reth:latest
    environment:
      NETWORK_UTXOS_API_KEY: ${INDEXER_SHARED_API_KEY:-}
      SOVA_DERIVATION_XPUB: ${SOVA_DERIVATION_XPUB:-}
      SOVA_SEQUENCER_MODE: true
    command: >
      node
      --chain /config/testnet-sepolia/genesis.json
      --btc-network ${NETWORK:-regtest}
      --btc-network-url http://bitcoin-regtest
      --btc-rpc-username user
      --btc-rpc-password password
      --network-utxos-url http://network-indexer:3031
      --sentinel-url http://sentinel-server:50051
      --sentinel-confirmation-threshold 6
      --http
      --http.addr 0.0.0.0
      --http.port 8545
      --ws
      --ws.addr 0.0.0.0
      --ws.port 8546
      --http.api all
      --authrpc.addr 0.0.0.0
      --authrpc.port 8551
      --authrpc.jwtsecret=/config/testnet-sepolia/jwt.txt
      --port=30303
      --discovery.port=30303
      --rollup.disable-tx-pool-gossip
      --metrics=0.0.0.0:6060
      --datadir /var/lib/sova
      --log.stdout.filter ${RUST_LOG:-info}
    ports:
      - "8545:8545"     # HTTP RPC
      - "8546:8546"     # WebSocket RPC
      - "30303:30303"   # P2P TCP
      - "30303:30303/udp"  # P2P UDP
      - "6060:6060"     # Metrics
    networks:
      - sova_network
    volumes:
      - sequencer-data:/var/lib/sova
      - ../config:/config
    depends_on:
      bitcoin-regtest:
        condition: service_healthy
      sentinel-server:
        condition: service_started
    profiles: [core]

  sentinel-server:
    image: ghcr.io/sovanetwork/sova-sentinel:v0.1.2
    environment:
      - SOVA_SENTINEL_HOST=0.0.0.0
      - SOVA_SENTINEL_PORT=50051
      - SOVA_SENTINEL_DB_PATH=/app/data/slot_locks.db
      - BITCOIN_RPC_URL=http://bitcoin-regtest:18443
      - BITCOIN_RPC_USER=user
      - BITCOIN_RPC_PASS=password
      - BITCOIN_CONFIRMATION_THRESHOLD=6
      - BITCOIN_REVERT_THRESHOLD=18
      - BITCOIN_RPC_MAX_RETRIES=5
      - RUST_LOG=${RUST_LOG:-info}
    ports:
      - "50051:50051"
    networks:
      - sova_network
    volumes:
      - sentinel-data:/app/data
    depends_on:
      bitcoin-regtest:
        condition: service_healthy
    profiles: [core]
  
  # Supporting Sova components
  bitcoin-regtest:
    image: ruimarinho/bitcoin-core@sha256:79dd32455cf8c268c63e5d0114cc9882a8857e942b1d17a6b8ec40a6d44e3981 # ruimarinho/bitcoin-core:24
    command:
      -regtest=1
      -server=1
      -txindex=1
      -rpcallowip=0.0.0.0/0
      -rpcbind=0.0.0.0
      -rpcuser=user
      -rpcpassword=password
    ports:
      - "18443:18443"
    networks:
      - sova_network
    volumes:
      - bitcoin-data:/home/bitcoin/.bitcoin
    healthcheck:
      test: [
        "CMD",
        "sh",
        "-c",
        "bitcoin-cli -regtest -rpcuser=user -rpcpassword=password getblockchaininfo && if [ $(bitcoin-cli -regtest -rpcuser=user -rpcpassword=password getblockcount) -eq 0 ]; then bitcoin-cli -regtest -rpcuser=user -rpcpassword=password generatetoaddress 1 bcrt1qxy2kgdygjrsqtzq2n0yrf2493p83kkfjhx0wlh; fi"
      ]
      interval: 5s
      timeout: 10s
      retries: 3
      start_period: 30s
    profiles: [core]
  
  network-enclave:
    image: ghcr.io/sovanetwork/network-enclave:v0.0.7
    environment:
      - BIP32_SEED=${BIP32_SEED}
      - ENCLAVE_API_KEY=${ENCLAVE_SHARED_API_KEY:-}
    ports:
      - "5555:5555"
    command: >
      --host 0.0.0.0
      --port 5555
      --network ${NETWORK:-regtest}
      --address-map-path /var/lib/enclave/address_map.bin
      --log-level ${RUST_LOG:-info}
    networks:
      - sova_network
    volumes:
      - enclave-data:/var/lib/enclave
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5555/health"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 5s
    profiles: [core]

  network-indexer:
    image: ghcr.io/sovanetwork/network-indexer:v0.1.4
    environment:
      - RUST_LOG=${RUST_LOG:-info}
      - NETWORK=${NETWORK:-regtest}
      - RPC_HOST=bitcoin-regtest
      - RPC_PORT=${RPC_PORT:-18443}
      - RPC_USER=${RPC_USER:-user}
      - RPC_PASSWORD=${RPC_PASSWORD:-password}
      - SOCKET_PATH=${SOCKET_PATH:-/tmp/network-utxos.sock}
      - START_HEIGHT=${INDEXER_START_BLOCK:-0}
      - POLLING_RATE=${INDEXER_POLLING_RATE:-500}
      - MAX_BLOCKS_PER_BATCH=${INDEXER_MAX_BLOCKS:-200}
      - API_HOST=${API_HOST:-0.0.0.0}
      - API_PORT=${API_PORT:-3031}
      - ENCLAVE_URL=http://network-enclave:5555
      - UTXO_URL=http://network-utxos:5557
      - ENCLAVE_API_KEY=${ENCLAVE_SHARED_API_KEY:-}
      - INDEXER_API_KEY=${INDEXER_SHARED_API_KEY:-}
    ports:
      - "3031:3031"
    networks:
      - sova_network
    depends_on:
      bitcoin-regtest:
        condition: service_healthy
      network-utxos:
        condition: service_started
    volumes:
      - socket:/tmp
    profiles: [core]

  network-utxos:
    image: ghcr.io/sovanetwork/network-utxos:v0.1.4
    environment:
      - RUST_LOG=${RUST_LOG:-info}
      - HOST=${UTXO_HOST:-0.0.0.0}
      - PORT=${UTXO_PORT:-5557}
      - LOG_LEVEL=${RUST_LOG:-info}
      - DATASOURCE=${UTXO_DATASOURCE:-sqlite}
      - SOCKET_PATH=${SOCKET_PATH:-/tmp/network-utxos.sock}
    ports:
      - "5557:5557"
    networks:
      - sova_network
    volumes:
      - utxo-data:/data
      - socket:/tmp
    profiles: [core]

  # OP Stack components
  op-node:
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-node:v1.13.4
    command: >
      op-node
      --l2=http://sova-reth:8551
      --l2.enginekind=reth
      --l2.jwt-secret=/config/testnet-sepolia/jwt.txt
      --sequencer.enabled
      --sequencer.l1-confs=5
      --verifier.l1-confs=4
      --rollup.config=/config/testnet-sepolia/rollup.json
      --rpc.addr=0.0.0.0
      --rpc.port=9545
      --rpc.enable-admin
      --l1=${ALCHEMY_L1_RPC_URL}
      --l1.rpckind=alchemy
      --l1.beacon=${L1_BEACON_URL}
      --p2p.listen.ip=0.0.0.0
      --p2p.listen.tcp=9222
      --p2p.listen.udp=9222
      --p2p.scoring=none
      --p2p.ban.peers=false
      --p2p.sequencer.key=${SEQUENCER_PRIVATE_KEY}
      --metrics.enabled
      --metrics.addr=0.0.0.0
      --metrics.port=7300
      --log.level=info
    volumes:
      - ../config:/config
    ports:
      - "9545:9545"     # RPC
      - "9222:9222"     # P2P TCP
      - "9222:9222/udp" # P2P UDP
      - "7300:7300"     # Metrics
    depends_on:
      sova-reth:
        condition: service_started
    networks:
      - sova_network
    profiles: [op-stack]

  op-batcher:
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-batcher:v1.13.1
    command: >
      op-batcher
      --l2-eth-rpc=http://sova-reth:8545
      --rollup-rpc=http://op-node:9545
      --poll-interval=1s
      --sub-safety-margin=6
      --num-confirmations=1
      --safe-abort-nonce-too-low-count=3
      --resubmission-timeout=30s
      --rpc.addr=0.0.0.0
      --rpc.port=8548
      --rpc.enable-admin
      --max-channel-duration=25
      --l1-eth-rpc=${ALCHEMY_L1_RPC_URL}
      --private-key=${BATCHER_PRIVATE_KEY}
    ports:
      - "8548:8548" # HTTP metrics/admin port for batcher
    networks:
      - sova_network
    depends_on:
      - sova-reth
      - op-node
    profiles: [op-stack]

  op-proposer:
    image: us-docker.pkg.dev/oplabs-tools-artifacts/images/op-proposer:v1.10.0
    command: >
      op-proposer
      --poll-interval=12s
      --proposal-interval=20s
      --rpc.addr=0.0.0.0
      --rpc.port=8560
      --l1-eth-rpc=${ALCHEMY_L1_RPC_URL}
      --rollup-rpc=http://op-node:9545
      --private-key=${PROPOSER_PRIVATE_KEY}
      --game-factory-address=${DISPUTE_GAME_FACTORY_ADDRESS}
      --game-type=${DISPUTE_GAME_TYPE}
    ports:
      - "8560:8560" # HTTP metrics/admin port for proposer
    networks:
      - sova_network
    depends_on:
      - sova-reth
      - op-node
    profiles: [op-stack]

networks:
  sova_network:
    driver: bridge

volumes:
  bitcoin-data:
  enclave-data:
  sentinel-data:
  sequencer-data:
  socket:
  utxo-data:
